{"ast":null,"code":"// import axios from 'axios';\n// import { api } from '../urlConfig';\n// import store from '../store';\n// import { authConstants } from '../actions/constants';\n// const token = window.localStorage.getItem('token');\n// console.log(token,'1')\n// const axiosIntance = axios.create({\n//     baseURL: api,\n//     headers: {\n//         'Authorization': token ? `${token}` : ''\n//     }\n// });\n// axiosIntance.interceptors.request.use((req) => {\n//     const { auth } = store.getState();\n//     if(auth.token){\n//         req.headers.Authorization = `${auth.token}`;\n//     }\n//     return req;\n// })\n// axiosIntance.interceptors.response.use((res) => {\n//     return res;\n// }, (error) => {\n//     console.log(error.response);\n//     const status = error.response ? error.response.status : 500;\n//     if(status && status === 500){\n//         localStorage.clear();\n//         store.dispatch({ type: authConstants.LOGOUT_SUCCESS });\n//     }\n//     return Promise.reject(error);\n// })\n// export default axiosIntance;","map":{"version":3,"sources":["C:/Users/hamdi/Desktop/final ecommerce front end/ecommerce-admin-app/src/helpers/axios.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import axios from 'axios';\r\n// import { api } from '../urlConfig';\r\n// import store from '../store';\r\n// import { authConstants } from '../actions/constants';\r\n\r\n// const token = window.localStorage.getItem('token');\r\n// console.log(token,'1')\r\n// const axiosIntance = axios.create({\r\n//     baseURL: api,\r\n//     headers: {\r\n//         'Authorization': token ? `${token}` : ''\r\n//     }\r\n// });\r\n\r\n// axiosIntance.interceptors.request.use((req) => {\r\n//     const { auth } = store.getState();\r\n//     if(auth.token){\r\n//         req.headers.Authorization = `${auth.token}`;\r\n//     }\r\n//     return req;\r\n// })\r\n\r\n// axiosIntance.interceptors.response.use((res) => {\r\n//     return res;\r\n// }, (error) => {\r\n//     console.log(error.response);\r\n//     const status = error.response ? error.response.status : 500;\r\n//     if(status && status === 500){\r\n//         localStorage.clear();\r\n//         store.dispatch({ type: authConstants.LOGOUT_SUCCESS });\r\n//     }\r\n//     return Promise.reject(error);\r\n// })\r\n\r\n// export default axiosIntance;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}