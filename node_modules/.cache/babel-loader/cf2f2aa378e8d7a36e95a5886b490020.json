{"ast":null,"code":"import { authConstants } from \"./constants\";\nimport axios from \"../helpers/axios\";\nexport const login = user => {\n  console.log(user);\n  return async dispatch => {\n    k;\n  };\n};\nexport const isUserLoggedIn = () => {\n  return async dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const user = JSON.parse(localStorage.getItem('user'));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      dispatch({\n        type: authConstants.LOGIN_FAILURE,\n        payload: {\n          error: 'Failed to login'\n        }\n      });\n    }\n  };\n};\nexport const signout = () => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGOUT_REQUEST\n    });\n    const res = await axios.post(`/admin/signout`);\n\n    if (res.status === 200) {\n      localStorage.clear();\n      dispatch({\n        type: authConstants.LOGOUT_SUCCESS\n      });\n    } else {\n      dispatch({\n        type: authConstants.LOGOUT_FAILURE,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/hamdi/Desktop/final ecommerce front end/ecommerce-admin-app/src/actions/auth.actions.js"],"names":["authConstants","axios","login","user","console","log","dispatch","k","isUserLoggedIn","token","localStorage","getItem","JSON","parse","type","LOGIN_SUCCESS","payload","LOGIN_FAILURE","error","signout","LOGOUT_REQUEST","res","post","status","clear","LOGOUT_SUCCESS","LOGOUT_FAILURE","data"],"mappings":"AAAA,SAASA,aAAT,QAA8B,aAA9B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,OAAO,MAAMC,KAAK,GAAIC,IAAD,IAAU;AAE3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,SAAO,MAAOG,QAAP,IAAoB;AAEzBC,IAAAA,CAAC;AACF,GAHD;AAIH,CARM;AAUP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC,SAAO,MAAMF,QAAN,IAAkB;AACrB,UAAMG,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAGF,KAAH,EAAS;AACL,YAAMN,IAAI,GAAGS,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACAL,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAEd,aAAa,CAACe,aADf;AAELC,QAAAA,OAAO,EAAE;AACLP,UAAAA,KADK;AACEN,UAAAA;AADF;AAFJ,OAAD,CAAR;AAMH,KARD,MAQK;AACDG,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAEd,aAAa,CAACiB,aADf;AAELD,QAAAA,OAAO,EAAE;AAAEE,UAAAA,KAAK,EAAE;AAAT;AAFJ,OAAD,CAAR;AAIH;AACJ,GAhBD;AAiBH,CAlBM;AAoBP,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,SAAO,MAAMb,QAAN,IAAkB;AAErBA,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAEd,aAAa,CAACoB;AAAtB,KAAD,CAAR;AACA,UAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,IAAN,CAAY,gBAAZ,CAAlB;;AAEA,QAAGD,GAAG,CAACE,MAAJ,KAAe,GAAlB,EAAsB;AAClBb,MAAAA,YAAY,CAACc,KAAb;AACAlB,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAEd,aAAa,CAACyB;AAAtB,OAAD,CAAR;AACH,KAHD,MAGK;AACDnB,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAEd,aAAa,CAAC0B,cADf;AAELV,QAAAA,OAAO,EAAE;AAAEE,UAAAA,KAAK,EAAEG,GAAG,CAACM,IAAJ,CAAST;AAAlB;AAFJ,OAAD,CAAR;AAIH;AAGJ,GAhBD;AAiBH,CAlBM","sourcesContent":["import { authConstants } from \"./constants\";\r\nimport axios from \"../helpers/axios\";\r\n\r\nexport const login = (user) => {\r\n\r\n    console.log(user)\r\n\r\n    return async (dispatch) => {\r\n\r\n      k\r\n    }\r\n}\r\n\r\nexport const isUserLoggedIn = () => {\r\n    return async dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(token){\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            dispatch({\r\n                type: authConstants.LOGIN_SUCCESS,\r\n                payload: {\r\n                    token, user\r\n                }\r\n            });\r\n        }else{\r\n            dispatch({\r\n                type: authConstants.LOGIN_FAILURE,\r\n                payload: { error: 'Failed to login' }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const signout = () => {\r\n    return async dispatch => {\r\n\r\n        dispatch({ type: authConstants.LOGOUT_REQUEST });\r\n        const res = await axios.post(`/admin/signout`);\r\n\r\n        if(res.status === 200){\r\n            localStorage.clear();\r\n            dispatch({ type: authConstants.LOGOUT_SUCCESS });\r\n        }else{\r\n            dispatch({\r\n                type: authConstants.LOGOUT_FAILURE,\r\n                payload: { error: res.data.error }\r\n            });\r\n        }\r\n\r\n        \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}